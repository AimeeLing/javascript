*******************************************免费课第一周*******************************************
20170711
1.前端: 展示数据,页面交互
2.开发工程师
3.一些常用的技术类型的网端
4.IDE(开发编译工具)
5.JS标记语言和变成语言
6.ES变量/常量输出打印
7.JS的命名规范
8.JS种常用和不常用的输出方式
9.控制台
10.京东(凹凸实验室)
11.面向对象
12.JS种的数据类型
13.Number(数字)
14.思考题
15.作业;

-----------------------------20170712
戒子规
1.boolean布尔类型
2.null和undefined
3.引用数据类型--对象object
    修改增加获取删除
4.以面向对象的思想理解对象
    基本数据类型和引用数据类型的区别
5.三个判断语句
6.JS种的运算符
7.关于NaN,关于Number()
8.CSS属性
9.操作DOM元素
10.给元素绑定点击事件
11.获取body的背景颜色
12.作业

-----------------------------20170713
1.循环;
    1)for循环;
    2)for...in循环;
2.函数数据类型
    函数的创建和执行
3.数据类型检测的四种方法;1)typeof;2)instanceOf;3)constructor;4)Object.prototype.toString.call;
4.作业;

*******************************************免费课第二周*******************************************
-----------------------------20170718
一.函数的核心操作
二.数据类型转换
    1.转换为数字Number()
    2.转换为字符串toString()
    3.转换为布尔Boolean()
    4. == 比较
三.Math数学函数
四.string字符串
五.while循环

20170719
1.获取DOM元素的8个方法
2.DOM元素节点关系的7个属性
3.节点类型的4个类型
4.利用学的节点关系中的属性childNodes和nodeType,实现children的效果->获取指定元素下的元素子节点;
5.while循环的语法
6.思考
7.作业

-----------------------------20170720
一.数组
    1.数组的创建方式
    2.数组隶属于对象数据类型
    3.数组由属性名属性值组成,值是属性值,属性名是索引;
二.数组中的常用的一些方法(15个)
三.算法:
    1.数组去重
    2.递归
    3.冒泡
    4.快排
    5.插排
四.机考
    1.必考: 选项卡,数组
    2.选考: 冒泡,快排,插排

20170722
1.考试安排
    1.机试
    2.笔试
2.数据类型转换类型
3.Array/String/Math方法
4.综合案例: 获取四位验证码(数字+字母)
5.DOM

20170723
一.DOM
二.日期类: Date
三.周末班学生视频预习
四.安装git

*******************************************第一周*******************************************
-----------------------------20170725
1.git
    版本控制器
2.gitHub
3.gitHub相关命令操作
4.把本地仓库的代码提交到远程
5.总结git步骤
6.Markdown

-----------------------------20170726
1.变量提升declare
2.作用域
    1.函数执行的步骤
    2.作用域scope
    3.闭包
    4.作用域链
    5.如何查找上级作用域
3.知识点汇总

-----------------------------20170727
1.堆内存释放
2.栈内存释放
3.i++和++i
4.闭包的作用
5.思考题
6.THIS
7.综合体

-----------------------------20170729

-----------------------------20170730
一.单利模式
    单利模式,命名空间;
二.工厂模式
    体现出了函数封装特点;
三.面向对象思想
    什么是面向对象?面向对象的三个概念;
    OOP
    内置类
四.构造函数设计模式
五.基于构造函数设计模式引申的原型模式
六.思考题think
    解决冲突的方法(两个)

*******************************************第二周*******************************************

-----------------------------20170801
一.changeColor案例
    1.return处理方式
    2.闭包处理方式
    3.自定义属性处理方式
二.严格模式和非严格模式的区别
    1.var
    2.自执行函数
    3.函数执行
    4.arguments
    5.arguments.callee和arguments.callee.caller


-----------------------------20170802
一.第一周考试题
    1.不及格的罚抄
        Array中常用的方法:
            push: 作用和意义
            参数:
            返回值:
            原有数组是否改变:
        String:
            substr: 作用
            参数:
            返回值:
        Math:
        DOM:
            获取元素的方法以及作用
            节点之间关系的属性
            增删改DOM的方法
        Date
        数据类型转换

        罚抄完成,再次抽查提问,不会?继续抄;
    2.考试题讲解
二.单利模式和构造原型模式的区别
    1.具体的业务开发//->单利模式
    2.类库的封装: 封装轮播图,封装插件,封装选项卡//->构造原型模式
    3.基于构造原型模式扩展出的call,apply,bind
三.Object原型上的属性:
      1.hasOwnProperty
      2.toString
      3.isprototypeOf
      4.propertyIsEnumerable枚举
四.函数的三种角色
    1.普通函数
        私有作用域,形参赋值,变量提升,代码执行,返回值,arguments,栈内存的销毁不销毁,作用域链....作为普通函数,我们要掌握的东西!!!
    2.类
        实例,类,instanceof,constructor,prototype,__proto__,原型链....作为类,讲过的构造原型,我们要掌握的东西!!!
    3.普通对象
        就把它当作一个普通的obj即可,有自己的属性名和属性值...
五.call/apply/bind
    三个方法的作用和区别???


-----------------------------20170803
一.把类数组转化为数组
    1.把类数组转化为数组原理
    2.arguments,元素集合,节点集合,都是类数组;
    3.借用数组方法slice()方法把类数组转转数组
    4.arguments可以使用slice()方法转数组
    5.元素集合,节点集合不可以使用slice方法转数组
二.浏览器异常信息捕获
三.try...catch封装兼容类数组转数组的库(兼容用slice,不兼容用循环)
    1.使用try...catch的作用;
四.JSON(是window的对象)
    1.JSON.parse: 把JSON字符串转JSON对象
    2.JSON.stringify: 把JSON对象转JSON字符串
    3.封装JSON字符串转JSON对象(兼容用JSON.parse,不兼容用eval): toJSON方法;
五.AJAX
    AJAX的作用: 异步的JS和XML;
    AJAX的格式:
        1.创建一个AJAX对象
        2.打开一个请求的URL的地址
        3.监听AJAX的状态改变,接收服务器返回的结果;
        4.向服务器端发送请求
六.sort排序
七.tableSort列表排序案例
八.思考题


-----------------------------20170805
一.函数执行时注意几点:
    1.有没有实参/形参
    2.有没有return
    3.函数名前有没有点
二.面试题回家做(在老师课件md文档中)
三.原型链
四.原型链深入Function(函数的三种角色)
    1.普通函数
    2.类
    3.普通对象
五.call/apply/bind(老师课件md文档里,有道题要做)
    1.call方法
    2.apply方法
    3.bind方法
六.JS中this的集中情况
    1.自执行函数中的this是window;和函数在哪执行定义以及在哪执行没有任何关系;
    2.给元素的某个事件绑定方法,事件触发,方法执行,方法中的this是当前元素本身;
    3.构造函数执行,函数体中出现的this是当前类的实例;
    4.方法执行,看方法前面是否有点,有的话,点前面是谁,this就是谁;没有点,this是window;
    5.可以使用call/apply/bind强制改变某一方法中的this(这个规律的优先级最高)
    但是,以上5条都是在非严格模式下,JS还有严格模式
    严格模式下:
    1.自执行函数中的this是undefined;
    2.函数执行,前面没点,this是undefined;
    3.使用call/apply/bind时,如果传递的第一个参数是null,this是undefined;如果传递的第一个参数是undefined,this是undefined;
    总结以上3条,如果没确定主体,this都是undefined;
七.求数组中的最大值最小值(4种方法)
八.求平均数(6个方法)
九.utils.js文件(封装了俩方法)
    1.封装类数组转数组的方法
    2.封装JS字符串转JS对象的方法
十.JSON
    1.JSON对象转JSON字符串: JSON.parse
    2.JSON字符串转JSON对象: JSON.stringify
十一.AJAX
    发送一个请求,把数组拿回来,需要4步:
    1.创建一个AJAX对象;
    2.打开一个请求的地址;
    3.监听AJAX的状态改变.接收服务器返回的结果;
    4.向服务器发送请求;
十二.table表格排序案例
    1.数据动态绑定的3种方式
        1)动态创建DOM元素
        2)字符串拼接(ES6中模板字符串)
        3)模板引擎(react/vue/tempPlate/Angular)
        动态绑定容易引起DOM回流;
            1.DOM回流
            2.DOM重绘
        解决DOM回流的方法: 文档碎片
    2.文档碎片
        文档碎片虽然解决了DOM回流的问题,但里面包含有动态创建的步骤,麻烦;
        解决文"档碎片这个麻烦"的方法: 字符串拼接(ES6方式)
    3.字符串拼接(ES6方式)
        ES6不兼容所有的浏览器;
        解决ES6不兼容的方法: babel;
    4.babel
        babel: 就是把ES6转换为ES5的工具;
十三.sort数组排序
    1.return a-b方法
    2.a.xxx.localComPare(b.xxx)方法
十四.预习
    从第二章第二节开始一直往后看,能看多少看多少;



-----------------------------20170806









-----------------------------第二周----------------









-----------------------------第八周----------------
案例: QQMusic
案例: resume简历-H5场景创意简历
less编译
Swiper插件